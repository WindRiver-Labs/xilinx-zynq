How to build the validated bootloader


This README is about howto get and build the BOOT.BIN for zc702 and zc706 from
SDK, which is used to validate the featues mentioned in README.hardware.


0. Preparations & Prerequisites:
===============================

Prerequisites:
  * Experienced with Xilinx development tools such as vivado, xSDK.
  * Familiar with the basic ADI software tools and concepts.

Hardware preparations:
  * A Linux host machine installed with both Xilinx Vivado and xSDK, 2018.3
  * Xilinx ZynqMP ZCU102 development sets mentioned in README.hardware

A Xilinx BOOT.bin may include the following parts:

	-----------------------------------------
	|	FSBL(first stage bootloader)	|
	-----------------------------------------
	|	Bitstream(FPGA design)		|
	-----------------------------------------
	|	u-boot				|
	-----------------------------------------

The BOOT.BIN is the only mandatory file deployed into your boot sector.


1. Download & install 2018.3 ZC706/2, Vivado and SDK from the following links:
=============================================================================
 
   https://www.xilinx.com/support/download/index.html/content/xilinx/en/downloadNav/vivado-design-tools.html
   https://www.xilinx.com/support/download/index.html/content/xilinx/en/downloadNav/embedded-design-tools/2018-3.html

   Since there are a lot of components in the second website links, hover your
   mouse over the link name for 2018.3 SDK, ZC702, and ZC706 respectively:
     PetaLinux 2018.3 Installer (TAR/GZIP - 6.79 GB)
     ZC702 BSP (BSP - 101.36 MB)
     ZC706 BSP (BSP - 103.38 MB)
   Then you can download them by your Xilinx account with the proper permission.

   Suggestion: 
     You'd better install Vivado and SDK into the same host machine for your
     convenience, and xilinx-zc706/2-v2018.3-final.bsp is just a gz tarball,
     you can easily untar it with "tar zxf xilinx-zc706-v2018.3-final.bsp".
     After having done the untar, there will be a fold name xilinx-zc706-2018.3
     the contents of this fold should be as follows:

       drwxr-xr-x. 3  4096 Dec  6 17:33 components
       -rw-r--r--. 1   248 Dec  6 17:20 config.project
       drwxr-xr-x. 3  4096 Dec  6 17:46 hardware
       drwxr-xr-x. 3  4096 Dec  6 17:33 pre-built
       drwxr-xr-x. 6  4096 Dec  6 17:36 project-spec
       -rw-r--r--. 1  5294 Dec  6 17:36 README
       -rw-r--r--. 1   592 Dec  6 17:21 README.hw
     The u-boot.elf image in fold pre-built/linux/images will be used to build
     into BOOT.BIN with the corresponding FPGA HDL file.

2. Get 2018.3 BOOT.BIN for the general hardware features validation
===================================================================

We use the default 2018.3 BOOT.BIN for zc702/6 in the final BSP tarball, you can
deploy them into the boot sector of your MMC disk, like the following example:
 
	#> cp path_to_xilinx-zc702-2018.3/pre-built/linux/images/BOOT.BIN path_to_mmcblk0p1_mountpoint
	#> cp path_to_xilinx-zc706-2018.3/pre-built/linux/images/BOOT.BIN path_to_mmcblk0p1_mountpoint

3. Build specific BOOT.BIN with adv7511 FPGA bitstream to validate HDMI feature
===============================================================================

1). Download build script from analog website as follows:
--------------------------------------------------------
   
https://wiki.analog.com/resources/tools-software/linux-software/build-the-zynq-boot-image

Hover your mouse over the link name for build_boot_bin.sh, then click it to open
and download it.

2). Steps to clone/compile HDL for ZC702/6 in the default install Vivado path
-----------------------------------------------------------------------------

Presumption: /opt/Xilinx is the default Vivado and SDK install path.

	#> mkdir -p /opt/Xilinx/workspace
	#> cd /opt/Xilinx/workspace
	#> source ../Vivado/2018.3/settings64.sh 
	#> git clone https://github.com/analogdevicesinc/hdl.git
	#> cd hdl
	#> git checkout a5b7699bd5fc80f262dfe3d4795cf254bfa53496
	#> make -C projects/adv7511/zc706
	#> make -C projects/adv7511/zc702

After having done on adv7511 zc702/6, there will be an output fold holding hdf:
	#> ls -l projects/adv7511/zc702/adv7511_zc702.sdk
	   -rw-rw-r--. 584838 Nov 23 12:04 system_top.hdf
	#> cd ..

3). Steps to build final BOOT.BIN for ZC702/6 with prebuilt u-boot.elf and hdf
------------------------------------------------------------------------------

Based on the steps in section 2, we'll build them as follows:

	#> mkdir -p /opt/Xilinx/workspace/zc702
	#> cd /opt/Xilinx/workspace/zc702
	#> source ../Vivado/2018.3/settings64.sh
	#> cp path_to_xilinx-zc702-2018.3/pre-built/linux/images/u-boot.elf .
	#> cp path_to_build_boot_bin.sh .
	#> chmod +x build_boot_bin.sh
	#> cp ../hdl/projects/adv7511/zc702/adv7511_zc702.sdk/system_top.hdf .
	#> build_boot_bin.sh system_top.hdf u-boot.elf

After building done, the BOOT.BIN will be in the fold output_boot_bin, looks
like as follows:
	#> ls -l output_boot_bin
	-rw-rw-r--.  2032960 Nov 23 15:26 BOOT.BIN
	-rwxrwxr-x.   430836 Nov 23 15:26 fsbl.elf
	-rw-rw-r--.  1394284 Nov 23 15:26 system_top.bit
	-rw-rw-r--.   584838 Nov 23 15:26 system_top.hdf
	-rw-r--r--.  4535312 Nov 23 15:26 u-boot.elf
	-rw-rw-r--.       67 Nov 23 15:26 zynq.bif

This BOOT.BIN with adv7511 multimedia design will be used to validate our HDMI
feature. The same steps for zc706 to build BOOT.BIN with adv7511.

Note:
  It will take a while to build hdl and BOOT.BIN(more than 30m), so have a fun.
